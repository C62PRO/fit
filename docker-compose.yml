version: '3.5'

services:
  dauer:
    image: 127.0.0.1:5000/dauer
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ExternalAuthProviders__Google__ClientId=${GOOGLE_AUTH_CLIENTID}
      - ExternalAuthProviders__Google__ClientSecret=${GOOGLE_AUTH_CLIENTSECRET}
      - Domain=${DOMAIN}
      - EmailConfiguration__SmtpUsername=${EMAIL_SMTP_USERNAME}
      - EmailConfiguration__SmtpPassword=${EMAIL_SMTP_PASSWORD}
      - EmailConfiguration__PoppUsername=${EMAIL_POP_USERNAME}
      - EmailConfiguration__PopPassword=${EMAIL_POP_PASSWORD}
      - EmailConfiguration__ImapUsername=${EMAIL_IMAP_USERNAME}
      - EmailConfiguration__ImapPassword=${EMAIL_IMAP_PASSWORD}
      - ConnectionStrings__PostgresConnection=${POSTGRES_CONNECTION_STRING}

    ports:
        # Replace the values on the left by the values from launchSettings.json
      - "80:80"
      - "443:443"
    networks:
      - bb
    restart: on-failure

  postgres: 
    image: postgres
    restart: always
    volumes:
      - dbdata:/var/opt/postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
      - "5433:5433"
    networks:
      - bb

  wait_for_postgres:
    image: dadarek/wait_for_dependencies
    depends_on: 
      - postgres
    command: postgres:5432
    
volumes:
  dbdata:

networks:
  bb:
    name: bb_network
    ipam:
      driver: default
