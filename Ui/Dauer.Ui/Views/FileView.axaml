<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:Dauer.Ui.Controls"
             xmlns:vm="clr-namespace:Dauer.Ui.ViewModels"
             xmlns:views="clr-namespace:Dauer.Ui.Views"
             mc:Ignorable="d" d:DesignWidth="900" d:DesignHeight="600"
             x:Class="Dauer.Ui.Views.FileView"
             x:DataType="vm:FileViewModel">
  <Design.DataContext>
    <vm:DesignFileViewModel />
  </Design.DataContext>

  <UserControl.Styles>
    <StyleInclude Source="../Styles.axaml"/> 
  </UserControl.Styles>

  <Grid RowDefinitions="Auto, *">
    
    <WrapPanel Grid.Row="0" Orientation="Horizontal" >
      <Button Command="{Binding HandleImportClicked}" Content="Import" ToolTip.Tip="Import a file from disk"/>
      <Button Command="{Binding HandleExportClicked}" Content="Export" 
              IsEnabled="{Binding FitEdit.IsActive}" 
              ToolTip.Tip="Export a file to disk"/>
      <Button Command="{Binding HandleGarminUploadClicked}" Content="Garmin Upload Page" ToolTip.Tip="Open the Garmin Connect file upload page"/>
      <Button Command="{Binding HandleStravaUploadClicked}" Content="Strava Upload Page" ToolTip.Tip="Open the Strava file upload page"/>
      <Button Command="{Binding HandleRemoveClicked}" Content="Remove">
        <ToolTip.Tip>
          <TextBlock TextWrapping="Wrap">
            Remove the selected file from the file list. <LineBreak/>
            Does not delete any file on disk.
          </TextBlock>
        </ToolTip.Tip>
      </Button>
      <Button Command="{Binding HandleRepairSubtractivelyClicked}" Content="Repair (Subtractive)">
        <ToolTip.Tip>
          <TextBlock TextWrapping="Wrap">
            Attempt to repair the file <LineBreak/>

            <LineBreak/>
            This strategy preserves more information than the additive method.
            It starts with a copy of the given file and removes unnecessary messages. <LineBreak/>
            
            <LineBreak/>
            The resulting file preserves sport-specific data such as power, swim strokes, vertical osclliation.
            It preserves laps, sessions, and individual sports in multisport activities like triathlons. <LineBreak/>

            <LineBreak/>
            The repaired file should be uploadable to Garmin Connect.
            If this strategy does not work, try the additive method.
          </TextBlock>
        </ToolTip.Tip>
      </Button>
      <Button Command="{Binding HandleRepairAdditivelyClicked}" Content="Repair (Additive)">
        <ToolTip.Tip>
          <TextBlock TextWrapping="Wrap">
            Attempt to repair the file <LineBreak/>

            <LineBreak/>
            This strategy preserves less information than the subtractive method.
            It starts with a blank file and copies over the bare minimum data. <LineBreak/>
            
            <LineBreak/>
            The resulting file will be condensed into one lap, session, and sport. 
            It will contain the generic data from the original file, such as GPS coordinates (if available),
            heart rate (if available), timestamp, and speed/pace. 
            Sport-specific data such as power, swim strokes, and vertical oscillation will not be preserved.<LineBreak/>
            
            <LineBreak/>
            Multisport events like triathlons will be condensed into one sport.
            The resulting sport will be the first in the given file, i.e. typically open water swim.
            This can be changed in Data -> Sport.<LineBreak/>

            <LineBreak/>
            The repaired file includes all lat/lon records except those with speed spikes (speeds greater than 1000m/s)

            <LineBreak/>
            The repaired file should be uploadable to Garmin Connect.
          </TextBlock>
        </ToolTip.Tip>
      </Button>
      <Button Command="{Binding HandleRepairAddMissingFieldsClicked}" Content="Repair (Add Missing Fields)">
        <ToolTip.Tip>
          <TextBlock TextWrapping="Wrap">
            Attempt to repair the file <LineBreak/>

            <LineBreak/>
            This strategy attempts to add missing fields. <LineBreak/>
            
            <LineBreak/>
            If there are no lap messages, one is added.
            If there are no session messages, one is added.
            If there are no activity messages, one is added.

            <LineBreak/>
            <LineBreak/>
            The repaired file should be uploadable to Garmin Connect.
          </TextBlock>
        </ToolTip.Tip>
      </Button>
      <Button Command="{Binding HandleMergeClicked}" Content="Merge">
        <ToolTip.Tip>
          <TextBlock TextWrapping="Wrap">
            Merge the selected files.<LineBreak/>
            This creates a new file containing the data from all selected files.
          </TextBlock>
        </ToolTip.Tip>
      </Button>
    </WrapPanel>

    <ScrollViewer Grid.Row="1">
      <ListBox ItemsSource="{Binding FileService.Files}" SelectedIndex="{Binding SelectedIndex}">
        
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Vertical"/>
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="Gray" CornerRadius="4" Padding="4">
              <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                  <CheckBox IsChecked="{Binding IsVisible}" Margin="8,0,0,0"
                            IsVisible="{Binding Activity.File, Converter={x:Static ObjectConverters.IsNotNull}}">
                    <ToolTip.Tip>
                      <TextBlock TextWrapping="Wrap" IsVisible="{Binding Activity.File, Converter={x:Static ObjectConverters.IsNotNull}}">
                        Load and show the file
                      </TextBlock>
                    </ToolTip.Tip>
                  </CheckBox>
                  <Button FontSize="10"
                          Command="{Binding $parent[UserControl].((vm:FileViewModel)DataContext).HandleActivityImportClicked}"
                          CommandParameter="{Binding Activity}"
                          IsVisible="{Binding Activity.File, Converter={x:Static ObjectConverters.IsNull}}"
                          Content="?"
                          Margin="5"
                          ToolTip.Tip="Import a file from disk and associate it with this activity">

                    <ToolTip.Tip>
                      <TextBlock TextWrapping="Wrap"
                                 IsVisible="{Binding Activity.File, Converter={x:Static ObjectConverters.IsNull}}">
                        Garmin told us about this workout, but didn't provide the file. Click to upload.
                      </TextBlock>
                    </ToolTip.Tip>
                  </Button>
                  <controls:PieProgressIndicator Maximum="100" Value="{Binding Progress}" Margin="5"/>
                </StackPanel>
                
                <TextBlock Text="{Binding Activity.StartTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
                <TextBlock FontWeight="Bold" Text="{Binding Activity.Name}" TextWrapping="Wrap" />
                <TextBlock HorizontalAlignment="Left" Text="{Binding Activity.Description}" TextWrapping="Wrap" MaxWidth="300"/>
                <Button 
                  Command="{Binding $parent[UserControl].((vm:FileViewModel)DataContext).HandleViewOnlineClicked}"
                  CommandParameter="{Binding Activity}"
                  Classes="hyperlink"
                  Content="View Online"/>
              </StackPanel>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </ScrollViewer>
  </Grid>

</UserControl>
